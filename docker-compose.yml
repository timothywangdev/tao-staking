services:
  cache:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  db:
    image: mongo:6
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  worker:
    build: .
    command: celery -A app.tasks.sentiment_staking_task worker --loglevel=info
    environment:
      REDIS_URL: redis://cache:6379
      MONGODB_URL: mongodb://db:27017
      LOKI_URL: http://loki:3100/loki/api/v1/push
      OTLP_GRPC_ENDPOINT: http://tempo:4317
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_started
      loki:
        condition: service_started
      tempo:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: .
          target: /app
  api:
    build: .
    command: uv run python -m app.main
    ports:
      - "8000:8000"
    environment:
      REDIS_URL: redis://cache:6379
      MONGODB_URL: mongodb://db:27017
      LOKI_URL: http://loki:3100/loki/api/v1/push
      OTLP_GRPC_ENDPOINT: http://tempo:4317
    depends_on:
      cache:
        condition: service_healthy
      worker:
        condition: service_started
      db:
        condition: service_healthy
      loki:
        condition: service_started
      tempo:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: .
          target: /app

  # Observability services
  flower:
    build: .
    command: celery -A app.tasks.sentiment_staking_task flower --port=5555 --broker=redis://cache:6379
    ports:
      - "5555:5555"
    environment:
      REDIS_URL: redis://cache:6379
      LOKI_URL: http://loki:3100/loki/api/v1/push
    depends_on:
      cache:
        condition: service_healthy
      worker:
        condition: service_started
      db:
        condition: service_healthy
      loki:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: .
          target: /app
  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
  tempo:
    image: grafana/tempo:2.4.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - loki
  prometheus:
    image: prom/prometheus:v2.51.2
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana/:/etc/grafana/provisioning/datasources
      - ./observability/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./observability/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus