version: '3.8'
services:
  cache:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  db:
    image: mongo:6
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  worker:
    build: .
    command: celery -A app.tasks.sentiment_staking_task worker --loglevel=info
    environment:
      REDIS_URL: redis://cache:6379
      MONGODB_URL: mongodb://db:27017
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: .
          target: /app
  api:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      REDIS_URL: redis://cache:6379
      MONGODB_URL: mongodb://db:27017
    depends_on:
      cache:
        condition: service_healthy
      worker:
        condition: service_started
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: .
          target: /app
  flower:
    build: .
    command: celery -A app.tasks.sentiment_staking_task flower --port=5555 --broker=redis://cache:6379
    ports:
      - "5555:5555"
    environment:
      REDIS_URL: redis://cache:6379
    depends_on:
      cache:
        condition: service_healthy
      worker:
        condition: service_started
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: .
          target: /app
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/"]
      interval: 30s
      timeout: 10s
      retries: 5
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]